on:
  # Manual trigger workflow
  workflow_dispatch:
      # Inputs the workflow accepts.
      # inputs:
      #     environment:
      #         description: "Environment to run the workflow"
      #         type: environment
      #         required: true
env:
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # S3 bucket for Terraform state
  ECR_REPOSITORY_AUTH: auth-srv
  ECR_REPOSITORY_CLIENT: client-srv
  ECR_REPOSITORY_TODO: todo-srv
  AWS_REGION: us-east-2
  EKS_CLUSTER: todo-eks
jobs:
  DEPLOY_TO_EKS:
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: 'latest'

      - name: Get Kube config file
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION}} --name ${{ env.EKS_CLUSTER }}

      - name: Print config file
        run: cat ~/.kube/config

      # - name: Create secret in Kubnernetes to access ECR
      #   run: kubectl create secret docker-registry todo-eks \
      #         --docker-server=715514482422.dkr.ecr.us-east-2.amazonaws.com \
      #         --docker-username=AWS \
      #         --docker-password=$(aws ecr get-login-password)

      - name: CMD
        run: ls helm/todocharts

      - name: Login to AWS ECR
        run: aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 715514482422.dkr.ecr.us-east-2.amazonaws.com

      - name: Package Helm Chart
        run: |
          helm package helm/todocharts
          helm repo index --merge index.yaml .
        
      - name: Install Helm chart
        run: helm install todocharts helm/todocharts --version 0.1.0
      
      # - name: Push Helm Chart to Amazon EKS
      #   run: |
      #     aws eks update-kubeconfig --name todo-eks --region us-east-2
      #     helm repo add <Your Helm Repo Name> <Your Helm Repo URL>
      #     helm push <Your Helm Chart Name>-<Your Chart Version>.tgz <Your Helm Repo Name>
      
      # - name: Deploy Helm
      #   uses: bitovi/github-actions-deploy-eks-helm@v1.2.9
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ env.AWS_REGION }}
      #     cluster-name: ${{ env.EKS_CLUSTER }}
      #     chart-path: helm/todocharts
      #     namespace: default
      #     name: "todo-eks"
      #     values: clientimage=${{ secrets.REGISTRY }}/${{ env.ECR_REPOSITORY_CLIENT }}, \
      #       authimage=${{ secrets.REGISTRY }}/${{ env.ECR_REPOSITORY_AUTH}}, \
      #       todoimage=${{ secrets.REGISTRY }}/${{ env.ECR_REPOSITORY_TODO}}, \
      #       AWS_IAM_DYNAMO_DB_ACCESS_KEY=${{ secrets.AWS_IAM_DYNAMO_DB_ACCESS_KEY }}, \
      #       AWS_IAM_DYNAMO_DB_SECRET_KEY=${{ secrets.AWS_IAM_DYNAMO_DB_SECRET_KEY }}, \
      #       JWT_SECRET=${{ secrets.JWT_SECRET }}, \
      #       AWS_DYNAMO_DB_REGION=${{ secrets.AWS_DYNAMO_DB_REGION }}, \
      #       RDS_POSTGRES_DB_URL=${{ secrets.RDS_POSTGRES_DB_URL }}, \
      #       RDS_POSTGRES_DB_USERNAME=${{ secrets.RDS_POSTGRES_DB_USERNAME }}, \
      #       RDS_POSTGRES_DB_PASSWORD=${{ secrets.RDS_POSTGRES_DB_PASSWORD }}
          